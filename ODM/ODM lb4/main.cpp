#include <iostream>
#include <vector>
#include <list>

using namespace std;

void peresechenie( vector <vector<int> > A,vector <vector<int> > B,int a,int b,int *A_O,int a_o,int *A_P,int a_p,int *B_O,int b_o,int *B_P,int b_p)
{

    int temp=0,size_c=0, i_c=-1,C_O[100];  ///cоздаем множество С
    //------------------------------------------------------------------------------

    for(int i=0; i<a_o; i++)///если i меньше а прибавляем к i единицу
    {
        for(int j=0; j<b_o; j++)///если j меньше b прибавляем к j единицу
        {
            if(A_O[i]==B_O[j])///Если i-й элемент множества A и j-й элемент множества B равны
            {
                i_c++;
                size_c++;
                C_O[i_c]=A_O[i];///добавляем i-й элемент в множество C
                break;
            }

        }

    }
    ///Множество С- пересечение множеств А и В.
    cout<<"Пересечение области отправления: "<<endl;//выводим пересечение
    for( int i_c1=0; i_c1<size_c; i_c1++) cout<<C_O[i_c1]<<" ";  ///выводим на экран множество С
    cout<<endl<<"----------------------------------------------"<<endl;

    int C_P[100];  ///cоздаем множество С
    temp=0;size_c=0;i_c=-1;
    //------------------------------------------------------------------------------

    for(int i=0; i<a_p; i++)///если i меньше а прибавляем к i единицу
    {
        for(int j=0; j<b_p; j++)///если j меньше b прибавляем к j единицу
        {
            if(A_P[i]==B_P[j])///Если i-й элемент множества A и j-й элемент множества B равны
            {
                i_c++;
                size_c++;
                C_P[i_c]=A_P[i];///добавляем i-й элемент в множество C
                break;
            }

        }

    }
    ///Множество С- пересечение множеств А и В.
    cout<<"Пересечение области прибытия: "<<endl;//выводим пересечение
    for( int i_c1=0; i_c1<size_c; i_c1++) cout<<C_P[i_c1]<<" ";  ///выводим на экран множество С
    cout<<endl<<"----------------------------------------------"<<endl;

    vector <vector<int> > C;  ///cоздаем множество С
    //------------------------------------------------------------------------------

    for(int i=0; i<a; i++)///если i меньше а прибавляем к i единицу
    {
        for(int j=0; j<b; j++)///если j меньше b прибавляем к j единицу
        {
            if(A[i]==B[j])///Если i-й элемент множества A и j-й элемент множества B равны
            {

                C.push_back(A[i]);///добавляем i-й элемент в множество C
                break;
            }

        }

    }
    ///Множество С- пересечение множеств А и В.
    cout<<endl;
    cout<<"Пересечение: "<<endl;//выводим пересечение
    cout<<"{";
    for (int i = 0; i < C.size(); i++)
    {
        cout<<"<";
        cout<<C[i][0];
        cout<<",";
        cout<<C[i][1];
        cout<<">";
    }
    cout<<"}"; ///выводим на экран множество С
    cout<<endl<<"----------------------------------------------"<<endl;
}

int main()
{
    bool kol=true;
    int *A_O,*B_O,*A_P,*B_P;
    setlocale(LC_ALL,"Russian");
    int tmp1=0,tmp2=0;
    cout<<"введите мощность обсасти отправления соответствия А: ";
    int a_o; cin>>a_o;
    A_O= new int[a_o];  ///динамически выделяем память для множества А
    cout<<endl;
    cout<<"введите  обсасть отправления соответствия А: ";
    for (int i = 0; i < a_o; i++) cin>>A_O[i]; ///Пользователь задает элементы первого множества.
    cout<<endl;
    cout<<"введите мощность обсасти прибытия соответствия А: ";
    int a_p; cin>>a_p;
    A_P= new int[a_p];  ///динамически выделяем память для множества А
    cout<<endl;
    cout<<"введите  обсасть прибытия соответствия А: ";
    for (int i = 0; i < a_p; i++) cin>>A_P[i]; ///Пользователь задает элементы первого множества.
    cout<<endl;
    cout<<"Ведите мощность графика соответствия А: " ;
    int a;                                  ///Пользователь задает мощность множества A (a)
    cin>>a;
    vector <vector<int> > A(a);
    cout<<"введите кортежи графика соответствия А: ";
    cout<<endl;
    for (int i = 0; i < a; i++)
    {
        cout<<i+1<<" "<<"кортеж:";
        cout<<endl;
        tmp1=0;
        tmp2=0;
        cin>>tmp1;
        A[i].push_back(tmp1);
        cin>>tmp2;
        A[i].push_back(tmp2);
    }
    cout<<endl;
    cout<<"введите мощность обсасти отправления соответствия B: ";
    int b_o; cin>>b_o;
    B_O= new int[b_o];  ///динамически выделяем память для множества А
    cout<<endl;
    cout<<"введите  обсасть отправления соответствия B: ";
    for (int i = 0; i < b_o; i++) cin>>B_O[i]; ///Пользователь задает элементы первого множества.
    cout<<endl;
    cout<<"введите мощность обсасти прибытия соответствия B: ";
    int b_p; cin>>b_p;
    B_P= new int[b_p];  ///динамически выделяем память для множества А
    cout<<endl;
    cout<<"введите  обсасть прибытия соответствия B: ";
    for (int i = 0; i < b_p; i++) cin>>B_P[i]; ///Пользователь задает элементы первого множества.
    cout<<endl;
    cout<<"Ведите мощность графика соответствия В: ";
    int b;
    cin>>b;                                ///Пользователь задает мощность множестваB (b)
    vector <vector<int> > B(b);
    cout<<"введите кортежи графика соответствия B: ";
    cout<<endl;
    for (int i = 0; i < b; i++)
    {
        cout<<i+1<<" "<<"кортеж:";
        cout<<endl;
        tmp1=0;
        tmp2=0;
        cin>>tmp1;
        B[i].push_back(tmp1);
        cin>>tmp2;
        B[i].push_back(tmp2);
    }
    cout<<endl;
     cout<<"графика соответствия А: ";
    cout<<"{";
    for (int i = 0; i < a; i++)
    {
        cout<<"<";
        cout<<A[i][0];
        cout<<",";
        cout<<A[i][1];
        cout<<">";
    }
    cout<<"}";
    cout<<endl;
    cout<<"графика соответствия B: ";
    cout<<"{";
    for (int i = 0; i < b; i++)
    {
        cout<<"<";
        cout<<B[i][0];
        cout<<",";
        cout<<B[i][1];
        cout<<">";
    }
    cout<<"}";
    cout<<endl;
    ///---------------------------------------------------------------------------------------------------------

     int in;
    ///Пользователь выбирает операцию над множествами-------------------------------------------------------------
        while(kol)
        {

            cout << "1.Операция пересечения АВ." << endl;
            cout << "2.Операция объединения АВ." << endl;
            cout << "3.Операция разность АВ." << endl;
            cout << "4.Операция инверсии А." << endl;
            cout << "5.Операция композиции АВ." <<endl;
            cout << "6.Операция симметрическоф разности." << endl;
            cout << "7.Завершить программу." << endl;
            cin >> in;
            switch (in)
            {
            case 1:
        {
            peresechenie(A,B,a,b,A_O,a_o,A_P,a_p,B_O,b_o,B_P,b_p);    ///пересечение
            break;
        }
            default:
        {
            cout<<"Error!! ";    ///ошибка при вводе
            break;
        }
            }

        }
    ///---------------------------------------------------------------------------------------------------------




    return 0;
}
