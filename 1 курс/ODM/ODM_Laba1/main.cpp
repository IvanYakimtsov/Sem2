#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include<iostream>
#include<conio.h>
using namespace std;


void peresechenie(int *A, int *B,int a, int b)///Операция пересечения
{
    int temp=0,size_c=0, i_c=-1,C[100];  ///cоздаем множество С
    //------------------------------------------------------------------------------

    for(int i=0; i<a; i++)///если i меньше а прибавляем к i единицу
    {
        for(int j=0; j<b; j++)///если j меньше b прибавляем к j единицу
        {
            if(A[i]==B[j])///Если i-й элемент множества A и j-й элемент множества B равны
            {
                i_c++;
                size_c++;
                C[i_c]=A[i];///добавляем i-й элемент в множество C
                break;
            }

        }

    }
    ///Множество С- пересечение множеств А и В.
    cout<<"Пересечение: "<<endl;//выводим пересечение
    for( int i_c1=0; i_c1<size_c; i_c1++) cout<<C[i_c1]<<" ";  ///выводим на экран множество С
    cout<<endl<<"----------------------------------------------"<<endl;
}
void Obedinenie(int *A, int *B,int a, int b)///Операция объединения
{
    int *C1; ///выделяем память под множество С1
    C1= new int[b]; ///х=b(мощность множества С1)
    for(int i_b=0; i_b<b; i_b++) C1[i_b]=B[i_b]; ///Создаём множество С1 равное множеству В.
    for(int i=0; i<a; i++) ///если i меньше а прибавляем к i единицу
    {
        for(int j=0; j<b; j++) ///если j меньше b прибавляем к b единицу
        {
            if(A[i]==C1[j])
            {
                C1[j]=0; ///Заменяем j элемент множества С1 на 0.
                break;
            }

        }

    }


    int C[100];
    int count=0;
    for(int i_b=0; i_b<b; i_b++) if(C1[i_b]!=0) count++;
    int c_size=count+a;
    int i_a=0;
    for(i_a; i_a<a; i_a++) C[i_a]=A[i_a]; ///Cоздаем множество С равное множеству А.
    for(int i_b=0; i_b<b; i_b++) if(C1[i_b]!=0)
        {
            C[i_a]=C1[i_b];  ///Копируем элементы множество C1 не равные нулю в множество С.
            i_a++;
        }
    ///---------------------------------------------------------------



    cout<<"объединение:"<<endl; ///С-объединение множеств.
    for(int i_c=0; i_c<c_size; i_c++) cout<<C[i_c]<<" ";///выводим С
    cout<<endl<<"----------------------------------------------"<<endl;

    delete[] C1;

}

void Raznost(int *A, int *B,int a, int b) ///операция разности
{
    int *C2; ///выделяем память под множество С2
    C2= new int[a];  ///х=а(мощность множества С2).
    for(int i_a=0; i_a<a; i_a++) C2[i_a]=A[i_a];   ///Создаём множество С2 равное множеству А.
    for(int j=0; j<b; j++) ///если j<b увеличиваем j на единицу
    {
        for(int i=0; i<a; i++) ///если i<b увеличиваем i на единицу
        {
            if(B[i]==C2[j]) ///Если i-ый элемент множества A равен j-ому элементу множества С2
            {
                C2[j]=0; ///Заменяем j элемент множества С2 на 0
                break;
            }

        }

    }
    cout<<"разность:"<<endl;
    for(int i_a=0; i_a<a; i_a++) if(C2[i_a]!=0) cout<<C2[i_a]<<" "; ///выводим разность на экран
    cout<<endl<<"----------------------------------------------"<<endl;
    delete[] C2;
}

void Dopolnenie(int *U, int *A,int u, int a)
{
    int *C4; ///выделяем память под множество C4
    C4= new int[u]; ///мощность C4 равна u
    for(int i_u=0; i_u<u; i_u++) C4[i_u]=U[i_u]; ///создаем мнодество С4 равное U
    for(int i=0; i<a; i++) ///если i<a увеличиваем i на 1
    {
        for(int j=0; j<u; j++) ///если j<b увеличиваем b на 1
        {
            if(A[i]==C4[j]) ///если i элемент множества А равен j элементу С4
            {
                C4[j]=0; ///заменяем j элемент С4 на 0
                break;
            }

        }

    }
    cout<<"дополнение:"<<endl; ///выводим на экран дополнение множеств
    for(int i_u=0; i_u<u; i_u++) if(C4[i_u]!=0) cout<<C4[i_u]<<" ";
    cout<<endl<<"----------------------------------------------"<<endl;
    delete[] C4;
}
void dec_proizv(int *A, int *B,int a, int b)
{
    int i1=0;
    int *D; /// создаем множество D
    D= new int[100];
    cout<<"Декартово произведение:"<<endl;
    cout<<"{";
    for(int i_a=0; i_a<a; i_a++) ///если i<a увеличиваем i на 1
        for(int i_b=0; i_b<b; i_b++) ///если j<b увеличиваем i на 1
        {
            D[i1]=A[i_a]; ///первой компонентой кортежа является i элемент множества А
            D[i1+1]=B[i_b]; ///первой компонентой кортежа является j элемент множества B
            i1=i1+2; ///увеличиваем мощность D
        }
    for(int i=0; i<i1; i=i+2) cout<<"<"<<D[i]<<","<<D[i+1]<<">"; ///D декартово произведение множеств
    cout<<"}";
    cout<<endl<<"----------------------------------------------"<<endl;
    delete[] D;
}
void sem_razn(int *A, int *B,int a, int b)
{
    int *C6; ///выделяем память под множество С6
    C6= new int[a];///мощность С6 равна а
    for(int i=0; i<a; i++) C6[i]=A[i]; ///Создаем множество С6 равное множеству А
    for(int i=0; i<b; i++)
    {
        for(int j=0; j<a; j++)
        {
            if(B[i]==C6[j]) ///Если i-ый элемент множества B равен j-ому элементу множества С6
            {
                C6[j]=0; ///Заменяем j элемент С6 на 0
                break;
            }

        }

    }
    int *C7; ///выделяем память для множества С7
    C7= new int[b]; ///мощность С7 равна В
    for(int i_a=0; i_a<a; i_a++) C7[i_a]=B[i_a]; ///Создаем множество С7 равное множеству В
    for(int i=0; i<b; i++) ///если i меньше b увеличиваем i на 1
    {
        for(int j=0; j<a; j++) ///если j меньше a увеличиваем j на 1
        {
            if(A[i]==C7[j]) ///Если i-ый элемент множества А равен j-ому элементу множества С7
            {
                C7[j]=0; ///заменяем j элемент множества С7 на 0
                break;
            }

        }

    }

    cout<<"симметрическая разность:"<<endl; ///выводим симметрическую разность на экран
    for(int i_a=0; i_a<a; i_a++) if(C6[i_a]!=0) cout<<C6[i_a]<<" ";
    for(int i_a=0; i_a<a; i_a++) if(C7[i_a]!=0) cout<<C7[i_a]<<" ";
    cout<<endl<<"----------------------------------------------"<<endl;
    delete[] C6;
    delete[] C7;
}

int main()
{
    int *A,*B,in,inl;
    bool kol=true;
    int U[15];
    for (int i = 0; i < 15; i++) U[i]=i+1;
//Создание массивов и их заполнение
    setlocale(LC_ALL,"Russian");
    cout<<"Ведите мощность множества А: " ;
    int a;                                  ///Пользователь задает мощность множества A (a)
    cin>>a;
    A= new int[a];  ///динамически выделяем память для множества А
    cout<<"Ведите мощность множества В: ";
    int b;
    cin>>b;                                ///Пользователь задает мощность множестваB (b)
    B= new int[b];   ///динамически выделяем память для множества В
    cout<<endl;
    cout<<"Выберите способ заполнения множеств: \n 1-Высказыванием \n 2-Перечислением \n";




    ///выбираем способ заполнения множества ------------------------------------------------------------------------
    cin>>inl;
    switch (inl)
    {
    case 1: ///заполняем множество высказыванием
    {
        for (int k = 0; k < a; k++)
        {
            A[k]=2*k+1;
            B[k]=k+2;
        }
        for (int k = 0; k < a; k++)
        {
            cout<<A[k]<<" ";   ///выводим множество А
        }
        cout<<endl;
        for (int k = 0; k < a; k++)
        {
            cout<<B[k]<<" ";   ///выводим множество В
        }
        cout<<endl;
        break;
    }
    case 2: ///заполняем множество перечислением
    {
        cout<<"введите множество А: ";
        for (int i = 0; i < a; i++) cin>>A[i]; ///Пользователь задает элементы первого множества.
        cout<<endl;
        cout<<"введите множество В: ";
        for (int i=0; i < b; i++) cin>>B[i];   ///Пользователь задает элементы второго множества.
        break;
    }
    }
    ///---------------------------------------------------------------------------------------------------------




///Пользователь выбирает операцию над множествами-------------------------------------------------------------
    while(kol)
    {

        cout << "1.Операция пересечения АВ." << endl;
        cout << "2.Операция объединения АВ." << endl;
        cout << "3.Операция разность АВ." << endl;
        cout << "4.Операция дополнение А." << endl;
        cout << "5.Операция декартова произведения АВ." <<endl;
        cout << "6.Операция симметрическоф разности." << endl;
        cout << "7.Завершить программу." << endl;
        cin >> in;
        switch (in)
        {
        case 1:
        {
            peresechenie(A,B,a,b);    ///пересечение
            break;
        }
        case 2:
        {
            Obedinenie(A,B,a,b);    ///объединение
            break;
        }
        case 3:
        {
            Raznost(A,B,a,b);    ///разность
            break;
        }
        case 4:
        {
            Dopolnenie(U,A,10,a);    ///дополнение
            break;
        }
        case 5:
        {
            dec_proizv(A,B,a,b);    ///декартово произведение
            break;
        }
        case 6:
        {
            sem_razn(A,B,a,b);    ///симметрическая разность
            break;
        }
        case 7:
        {
            kol=false;    ///завершение работы
            break;
        }
        default:
        {
            cout<<"Error!! ";    ///ошибка при вводе
            break;
        }
        }

    }
///---------------------------------------------------------------------------------------------------------




    delete[] A;
    delete[] B;



    return 0;
}
